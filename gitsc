#!/bin/bash
gitcmd=add
# Parsing commit types
INPUT=$HOME/Git-Shortcuts/gitsc.conf
OLDIFS=$IFS
IFS=','
[ ! -f $INPUT ] && { echo "$INPUT file not found"; exit 22; }
while read line emoji status; do
    commit+=( "$line" )
    gitmoji+=( "$emoji" )
    status_type+=( "$status" )
done < $INPUT
IFS=$OLDIFS

# Get modified files
mod=($({ git diff --name-only ; git diff --name-only --staged ; } | sort | uniq))

# Get untracked files
unt=($(git ls-files --other --exclude-standard))

# Get all files
all_files=($(git ls-files))
if [ $? != 0 ]; then
  clear
  echo "Not a git repository"
  exit
fi
if [ "$#" = 1 ] && [ "$1" != "." ]; then
  echo "Usage: gitsc or gitsc ."
  exit 1
fi

# Pre-processing
for (( i=0; i<${#mod[@]}; ++i)); do
    data+=( "${mod[$i]}" )
done
for (( i=0; i<${#unt[@]}; ++i)); do
    data+=( "${unt[$i]}" )
done
if (( ${#commit[@]} % 2 == 0 )) ; then
  commit+=( "GitShortcuts" )
fi
if (( ${#data[@]} % 2 == 0 )) ; then
  data+=( "This file can't be added to your repository" )
fi
if (( ${#all_files[@]} % 2 == 0 )) ; then
  all_files+=( "This file can't be added to your repository" )
fi

# Commit type interface
commitchose=$(zenity --list --title='Git Shortcuts' --text="Choose commit type" \
--width=600 --height=350 --column='Choose your' "${commit[@]}" --radiolist --column=' commit type' "${commit[@]}" )
if [ $? != 0 ] ; then
  exit
fi

# File interface
if [ "$#" != 1 ] ; then
  if [ "$commitchose" != [REMOVE] ] && [ "$commitchose" != "GitShortcuts" ]; then
    filechose=$(zenity --list --separator=" " --title='Git Shortcuts' --text="Choose file(s) to add" \
    --width=600 --height=600  --checklist --column='Add' "${data[@]}"  --column='File name' "${data[@]}")
  elif [ "$commitchose" = [REMOVE] ]  && [ "$commitchose" != "GitShortcuts" ]; then
    filechose=$(zenity --list --separator=" " --title='Git Shortcuts' --text="Choose file(s) to remove" \
    --width=600 --height=600  --checklist --column='Add' "${all_files[@]}"  --column='File name' "${all_files[@]}")
  else
    zenity --error --width=200 --height=100 --text="You must specify a commit type"
  exit
  fi
fi
if [ $? != 0 ] ; then
  exit
fi

# Commit message interface
ask=$(zenity --entry --title='Git Shortcuts' --text="Type your commit message" \
--width=600 --height=120)
if [ $? != 0 ] ; then
  zenity --warning --title='Git Shortcuts' --text="File(s) not added" --width=150 --height=120
  exit
fi

# Choose add/remove command
for (( i=0; i<${#commit[@]}; ++i)); do
  if [ "${commit[$i]}" = "$commitchose" ] ; then
  gitcmd="${status_type[$i]}"
  fi
done

# Git add/rm .
if [ "$#" = 1 ] && [ "$1" = "." ]; then
    git $gitcmd .
else
  # Git add/rm command
  for (( i=0; i<${#filechose[@]}; ++i)); do
    git $gitcmd ${filechose[i]}
  done
fi

# Commit message selection
for (( i=0; i<${#commit[@]}; ++i)); do
  if [ "${commit[$i]}" = "$commitchose" ] ; then
   git commit -m "${commit[$i]} ${gitmoji[$i]} --> $ask"
  fi
done

# Git push
push=$(zenity --question --title='Git Shortcuts' --text="Do you want to push" \
--width=300 --height=120)
if [ $? != 0 ] ; then
  exit
else
  git push
fi
